{"ast":null,"code":"var _jsxFileName = \"/Users/chan6502/Desktop/GitHub-workspace/React/mini-blog/src/component/list/PostList.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PostListItem from \"./PostListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n\n  & > * {\n    //일반적인 CSS 선택기 구문으로  & > *는 부모 구성 요소 또는 요소의 모든 직계 자식 요소를 선택을 의미\n    :not(:last-child) {\n      //마지막 child가 아니면\n      margin-bottom: 16px;\n    }\n  }\n`; //Wrapper은 .jsx 내부에서만 할당됨\n_c = Wrapper;\nfunction PostList(props) {\n  const {\n    posts,\n    onClickItem\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: posts.map((post, index) => {\n      //posts = props.posts 비구조화를 통해 .map으로 post, index를 뿌려줌\n      return /*#__PURE__*/_jsxDEV(PostListItem, {\n        post: post,\n        onClick: () => {\n          onClickItem(post); //item을 클릭하였을 때 post 데이터를 넣음\n        }\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PostList;\nexport default PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","styled","PostListItem","jsxDEV","_jsxDEV","Wrapper","div","_c","PostList","props","posts","onClickItem","children","map","post","index","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/chan6502/Desktop/GitHub-workspace/React/mini-blog/src/component/list/PostList.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PostListItem from \"./PostListItem\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n\n  & > * {\n    //일반적인 CSS 선택기 구문으로  & > *는 부모 구성 요소 또는 요소의 모든 직계 자식 요소를 선택을 의미\n    :not(:last-child) {\n      //마지막 child가 아니면\n      margin-bottom: 16px;\n    }\n  }\n`; //Wrapper은 .jsx 내부에서만 할당됨\n\nfunction PostList(props) {\n  const { posts, onClickItem } = props;\n\n  return (\n    <Wrapper>\n      {posts.map((post, index) => {\n        //posts = props.posts 비구조화를 통해 .map으로 post, index를 뿌려줌\n        return (\n          <PostListItem\n            key={post.id}\n            post={post}\n            onClick={() => {\n              onClickItem(post); //item을 클릭하였을 때 post 데이터를 넣음\n            }}\n          />\n        );\n      })}\n    </Wrapper>\n  );\n}\n\nexport default PostList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AAAAC,EAAA,GAbGF,OAAO;AAeb,SAASG,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGF,KAAK;EAEpC,oBACEL,OAAA,CAACC,OAAO;IAAAO,QAAA,EACLF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B;MACA,oBACEX,OAAA,CAACF,YAAY;QAEXY,IAAI,EAAEA,IAAK;QACXE,OAAO,EAAEA,CAAA,KAAM;UACbL,WAAW,CAACG,IAAI,CAAC,CAAC,CAAC;QACrB;MAAE,GAJGA,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACC,GAAA,GAnBQd,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}