# 선택 정렬보다 실행 시간 측명에서 더 효율적임
# 삽입 정렬은 정렬하는 과정에서도 항상 오름차순을 유지하고 있음
# 삽입 정렬은 현재 리스트의 데이터가 거의 정렬되어 있는 상태라면 매우 빠르게 동작함
array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

# 왼쪽에 들어갈지 오른쪽에 들어갈지 판단함
for i in range(1, len(array)): # 첫번째 데이터는 그 자체로 정렬되어 있다고 판단함
    for j in range(i, 0, -1):  # 인덱스 i부터 1까지 감소하여 반복하는 문법
        if array[j] < array[j - 1]:  # 한 칸씩 왼쪽으로 이동
            array[j], array[j - 1] = array[j - 1], array[j]
        else:  # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤
            break

print(array)
