# 나이트는 말을 타고 있기 때문에 이동을 할 때 L자 형태로만 이동할 수 있으며, 범위 밖으로는 나갈 수 없다.

# 파이썬 ord 함수를 이용하여 유니코드 문자를 반환한다.
input_data = input()  # 나이트의 위치를 문자로 입력 받음 예를 들어 a1
row = int(input_data[1])  # 문자열의 2번째는 숫자 이므로 행을 추출
column = int(ord(input_data[0])) - int(ord('a')) + 1  # 유니코드가 a가 시작이므로 a를 빼고 1을 더해 열의 번호를 구한다. ord('a')는 97이 나온다.

# 위의 과정을 거쳐서 a1이므로 row = 1 column = 1 이 대입이 된다.

# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]
# 아래으로 2칸 왼쪽으로 1칸 (-2, -1), 아래로 1칸 왼쪽으로 2칸 (-1, -2), 위로 1칸 왼쪽으로 2칸 (1, -2), 위로 2칸 왼쪽으로 1칸 (2, -1) 이 과정을 오른쪽도 똑같이 반복

# 따라서 총 8가지 방향에 대하여 각 위치로 이동이 가능하지 확인
result = 0
for step in steps:
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]  # 튜플 형태의 첫번째 데이터를 비교
    next_colum = column + step[1]  # 튜플 형태의 두번째 데이터를 비교
    # 해당 위치로 이동이 가능하다면 카운트 증가
    if next_row >= 1 and next_row <= 8 and next_colum >= 1 and next_colum <= 8:
        result += 1  # 이동 가능 범위라면 카운트를 1 증가

print(result)
